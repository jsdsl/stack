"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const stack_1=require("../stack");let stack;describe("Initialization",()=>{test("Empty Initialization",()=>{stack=new stack_1.Stack,expect(stack).toBeDefined()}),test("Initialization with elements.",()=>{stack=new stack_1.Stack(1,3,5,7),expect(stack).toBeDefined(),expect(stack.pop()).toBe(7),expect(stack.pop()).toBe(5),expect(stack.pop()).toBe(3),expect(stack.pop()).toBe(1),expect(stack.pop()).toBeUndefined()})}),describe("Per-method tests.",()=>{beforeEach(()=>{stack=new stack_1.Stack}),describe("#push",()=>{test("Basic push.",()=>{stack.push(4),expect(stack.toArray()).toStrictEqual([4])})}),describe("#pop",()=>{test("Empty stack #pop returns undefined.",()=>{expect(stack.pop()).toBeUndefined()}),test("Populated stack #pop returns correct element.",()=>{stack.push(3),stack.push(8),expect(stack.pop()).toBe(8)})}),describe("#peek",()=>{test("Empty stack #peek returns undefined.",()=>{expect(stack.peek()).toBeUndefined()}),test("Populated stack #peek returns correct elements.",()=>{stack.push(3),stack.push(8),expect(stack.peek()).toBe(8),expect(stack.peek()).toBe(8),stack.pop(),expect(stack.peek()).toBe(3),expect(stack.peek()).toBe(3)})}),describe("#add",()=>{}),describe("#clear",()=>{}),describe("#contains",()=>{}),describe("#get",()=>{}),describe("#isEmpty",()=>{}),describe("#iterator",()=>{}),describe("#remove",()=>{}),describe("#size",()=>{}),describe("#toArray",()=>{})});
//# sourceMappingURL=stack.test.js.map
